# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
env:
  - GO111MODULE=on

before:
  hooks:
    - go mod download

builds:
  - id: watcher-darwin-amd64
    ldflags:
      - -s -w -X github.com/DaRealFreak/watcher-go/internal/version.version={{.Version}}
    binary: watcher
    env:
      - CGO_ENABLED=1
      - CC=o64-clang
      - CXX=o64-clang++
    main: ./main.go
    goos:
      - darwin
    goarch:
      - amd64
  - id: watcher-linux-amd64
    ldflags:
      - -s -w -X github.com/DaRealFreak/watcher-go/internal/version.version={{.Version}}
    binary: watcher
    env:
      - CGO_ENABLED=1
    main: ./main.go
    goos:
      - linux
    goarch:
      - amd64
  - id: watcher-windows-amd64
    ldflags:
      - -s -w -X github.com/DaRealFreak/watcher-go/internal/version.version={{.Version}}
    binary: watcher
    env:
      - CGO_ENABLED=1
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    main: ./main.go
    goos:
      - windows
    goarch:
      - amd64

archives:
  - format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    name_template: "{{.ProjectName}}-v{{.Version}}-{{.Os}}-{{.Arch}}"
    files:
      - README.md
      - LICENSE

checksum:
  name_template: 'checksums.txt'

release:
  github:
    owner: DaRealFreak
    name: watcher-go
  disable: false
  draft: false
  prerelease: false
  name_template: "{{.Tag}}"

changelog:
  skip: false

  # Changelog generation implementation to use.
  #
  # Valid options are:
  # - `git`: uses `git log`;
  # - `github`: uses the compare GitHub API, appending the author login to the changelog.
  # - `gitlab`: uses the compare GitLab API, appending the author name and email to the changelog.
  # - `github-native`: uses the GitHub release notes generation API.
  #
  # Defaults to `git`.
  use: git

  # Group commits messages by given regex and title.
  # Order value defines the order of the groups.
  # Proving no regex means all commits will be grouped under the default group.
  # Default is no groups.
  groups:
    - title: 'Bug fixes'
      regexp: "^.*fix.*$"
      order: 0
    - title: 'Changes'
      regexp: "^.*task.*$"
      order: 1
  filters:
    # Commit messages matching the regexp listed here will be removed from
    # the changelog
    # Default is empty
    exclude:
      - '^[DOC]:'
      - typo
      - lint
      - '^Bump'
      - Merge pull request
      - Merge branch